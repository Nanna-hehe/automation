name: Trigger test
run-name: ${{ github.actor }} is testing out GitHub Actions on develop branch ðŸš€
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      PROJECT_KEY:
        description: The key of project
        type: string
        required: true
      TEST_EXECUTION_KEY:
        description: The key of test execution
        type: string
        required: false

env:
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

jobs:
  Trigger-Test:
    runs-on: ubuntu-latest
    # if: github.event.deployment_status.state == 'success'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      # - run: sudo apt update && sudo apt install -y gettext
      - name: Install dependencies
        run: npm ci
      - name:  Install Playwright
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - name: Submit results to Xray
        uses: actions/upload-artifact@v4
        # if: ${{ !cancelled() }}
        with:
         username: ${{ secrets.client_id }}
         password: ${{ secrets.client_secret }}
         path: test-results/junit-report.xml
      # - run: echo TOKEN=$(curl -H "Content-Type:application/json" -X POST --data "{\"clientId\":\"73CBB62979E04AE3A5AC5D450CF92A67\",\"clientSecret\":\"2c4e151b193067b4c8a27b6485c4b85c96d0c1e83939fc86971fe5bd1da84b98\"}" https://xray.cloud.getxray.app/api/v1/authenticate| tr -d '"') >> $GITHUB_ENV
      # # - run: echo ${{ env.TOKEN }}
      # # - run: cat test-reports/junit-report.xml
      # # - run: curl -X 'GET' 'https://kiet-le-dss-macbook-air.tail305ff.ts.net/ds/milestones?projectId=10003' -H 'accept:application/json' -H 'authorization:JWT ${{ env.TOKEN }}'
      # - run: curl -H "Content-Type:text/xml" -H "Authorization:JWT ${{ env.TOKEN }}" --data @test-results/junit-report.xml "https://xray.cloud.getxray.app/api/v2/import/execution/junit?projectKey=${{ inputs.PROJECT_KEY }}&testExecutionKey=${{ inputs.TEST_EXECUTION_KEY }}"


 