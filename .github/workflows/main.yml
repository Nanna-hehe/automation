# name: Playwright Tests
# on:
#   push :
#    branches:
#    - main
  
# jobs:
#   e2e-tests:
#     runs-on: macos-latest
#     if: github.event.deployment_status.state == 'success'
#     steps:
    # - uses: actions/checkout@v2
    # - uses: actions/setup-node@v1
    #   with:
#         node-version: 18
    # - name: Install dependencies
    #   run: npm ci
    # - name: Install Playwright
    #   run: npx playwright install --with-deps
    # - name: Run Playwright tests
    #   run: npx playwright test
#       env:
#         CLIENT_SECRET: ${{ CLIENT_SECRET }}
#         CLIENT_ID: ${{ CLIENT_ID }}
#         run: 'curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $token"  --data @"./test-results/junit-report.xml" https://xray.cloud.getxray.app/api/v2/import/execution/junit?projectKey=HEHE'






name: CI (Jira cloud example with GH action, report results to Test Execution - demo)
on:
  workflow_dispatch:
    inputs:
      test_execution_key:
        description: 'Test Execution issue key'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
         
    steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-node@v1
       with:
          node-version: 18
  
    # - uses: actions/checkout@v1
    # - name: Set up Java
    #   uses: actions/setup-java@v1
    #   with:
    #     java-version: '1.8' 
    # - name: Cache Maven packages
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2
     - name: Install dependencies
       run: npm ci
     - name: Install Playwright
       run: npx playwright install --with-deps
     - name: Run Playwright tests
       run: npx playwright test
     - name: Submit results to Xray
       uses: mikepenz/xray-action@v2.4.5
       with:
        username: ${{secrets.client_id}}
        password: ${{ secrets.client_secret }}
        xrayCloud: true
        testFormat: "junit"
        testPaths: "**/test-results/*.xml"
        projectKey: "COM"
        testExecutionKey: ${{ github.event.inputs.test_execution_key }}
